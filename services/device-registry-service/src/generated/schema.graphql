### This file was generated by Nexus Schema
### Do not make changes to this file directly

enum Access {
  READ
  READWRITE
  WRITE
}

type BinaryCapability {
  access: Access!
  description: String
  property: String!
  type: String!
}

union Capability = BinaryCapability | NumericCapability

input CreateDeviceInput {
  controller: String!
  device: CreateDeviceInputDevice!
}

input CreateDeviceInputDevice {
  description: String
  name: String
  powerSource: String
}

input CreateManyDevicesInput {
  controller: String!
  devices: [CreateDeviceInputDevice!]!
}

type Device {
  controller: String!
  description: String
  exposes: Expost!
  id: ID!
  name: String!
  powerSource: String
}

type Expost {
  capabilities: [Capability]!
  type: String!
}

type Mutation {
  """
  Register a new device or re-register (override) an existing one
  """
  registerDevice(input: CreateDeviceInput!): Device
  registerManyDevices(input: CreateManyDevicesInput!): [Device]
  unregisterAllDevicesForController(
    input: UnregisterAllDevicesForControllerInput!
  ): UnregisterManyDevicesResult
  unregisterManyDevices(
    input: UnregisterManyDevicesInput!
  ): UnregisterManyDevicesResult
}

type NumericCapability {
  access: Access!
  description: String
  max: Float
  min: Float
  property: String!
  type: String!
  unit: String
}

type Query {
  allDevices: [Device!]!
}

input UnregisterAllDevicesForControllerInput {
  controller: String!
}

input UnregisterDeviceInputDevice {
  id: ID!
}

input UnregisterManyDevicesInput {
  devices: [UnregisterDeviceInputDevice!]!
}

type UnregisterManyDevicesResult {
  deletedDeviceIds: [String]!
}
